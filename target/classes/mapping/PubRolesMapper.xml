<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.persistence.PubRolesMapper" >
  <resultMap id="BaseResultMap" type="com.demo.model.PubRoles" >
    <id column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_desc" property="roleDesc" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="INTEGER" />
    <result column="issys" property="issys" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, role_name, role_desc, enabled, issys
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from pub_roles
    where role_id = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from pub_roles
    where role_id = #{roleId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.demo.model.PubRoles" >
    insert into pub_roles (role_id, role_name, role_desc, 
      enabled, issys)
    values (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, 
      #{enabled,jdbcType=INTEGER}, #{issys,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.model.PubRoles" >
    insert into pub_roles
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleDesc != null" >
        role_desc,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="issys != null" >
        issys,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=INTEGER},
      </if>
      <if test="issys != null" >
        #{issys,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.model.PubRoles" >
    update pub_roles
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=INTEGER},
      </if>
      <if test="issys != null" >
        issys = #{issys,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.model.PubRoles" >
    update pub_roles
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=INTEGER},
      issys = #{issys,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>
  <select id="getResourcesByAuthName" parameterType="java.lang.String" resultType="java.lang.String">
        select b.resource_string
        from pub_authorities_resources a ,
        pub_resources b,
        pub_authorities c
        where a.resource_id = b.resource_id
        and a.authority_id = c.authority_id
        and c.authority_name = #{authName}
  </select>
</mapper>